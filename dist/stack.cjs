"use strict";module.exports=function(e={}){let t=[],{type:n,limit:r,onLimit:l}=Object.assign({},{type:"FIFO",limit:!1,onLimit:"update"},e),o="LIFO"===n.toUpperCase(),i=!1;function u(e=1,n=0){let r=[];return n>0&&Array.from({length:n}).map((()=>t.pop())),1==e?t.pop():(Array.from({length:e}).map((()=>{let e=t.pop();null!=e&&r.push(e)})),r)}function c(e=1,n=0){let r=[],l=t.length-n;return e>1&&Array.from({length:e}).map((()=>{null!=t[l-1]&&r.push(t[l-1]),l--})),1==e?t[t.length-1]:r}function p(){}return p.prototype={pull:u,pullReverse:function(e=1,t=0){let n=u(e,t);return n instanceof Array?n.reverse():n},peek:c,peekReverse:function(e=1,t=0){const n=c(e,t);return n instanceof Array?n.reverse():n},getSize:()=>t.length,isEmpty:()=>0==t.length,reset:()=>(t=[],!0),debug:()=>[...t]},p.prototype.push=o?function(e){const n=e instanceof Array,o=n?e.length:1;let c=!1;if("full"!==l||!i){if(r&&n&&o>r&&(e=e.slice(0,-o+r)),r){const o=(n?e.length:1)+t.length;o>=r&&"full"===l&&(e=e.slice(0,-(o-r))),o>=r&&"update"===l&&(c=u(o-r))}return t=e instanceof Array?t.concat(e):t.concat([e]),i=!!r&&t.length===r,c||void 0}}:function(e){const n=e instanceof Array,o=n?e.length:1;let c=!1;if("full"!==l||!i){if(r&&n&&o>r&&(e=e.slice(o-r)),r){const o=(n?e.length:1)+t.length;o>=r&&"full"===l&&(e=e.slice(0,-(o-r))),o>=r&&"update"===l&&(c=u(o-r))}return t=n?e.reduce(((e,t)=>[t,...e]),t):[e].reduce(((e,t)=>[t,...e]),t),i=!!r&&t.length===r,c||void 0}},new p};
